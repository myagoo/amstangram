{"version":3,"sources":["components/view.js","Galery.js","Tangram.js","App.js","serviceWorker.js","index.js"],"names":["View","styled","div","space","layout","typography","color","flexbox","background","border","position","Galery","galery","onSelect","useState","opened","setOpened","className","style","top","map","imageDataUrl","index","key","onClick","backgroundImage","SCALE","WALL_WIDTH","FPS","STROKE_WIDTH","createTrianglePoints","size","x","y","createInvertedRhombusPoints","createRhombusPoints","Tangram","onSave","patternImageDataUrl","canvasRef","useRef","piecesRef","worldRef","patternsRef","useEffect","canvas","document","createElement","width","current","height","context","getContext","image","Image","onload","drawImage","src","options","numberofcolors","qtres","ltres","rightangleenhance","pathomit","setTimeout","imageData","getImageData","traceData","ImageTracer","imagedataToTracedata","layers","segments","path","paper","Path","x1","y1","closed","strokeWidth","strokeColor","bodyDef","type","body","createBody","vertices","i","length","Vec2","fixtureDef","filterCategoryBits","filterMaskBits","shape","Polygon","createFixture","forEach","destroyBody","remove","useLayoutEffect","ground","createPiece","points","invertedPoints","fillColor","Color","random","applyMatrix","pivot","Point","density","friction","restitution","linearDamping","angularDamping","view","on","getPosition","rotation","getAngle","Math","PI","window","event","ctrlKey","getType","setType","setAwake","inverted","invertedVertices","invertedFixtureDef","destroyFixture","getFixtureList","mdEvent","physicsMoveJoint","setDensity","resetMassData","setBullet","handleMouseMove","handleMouseUp","off","destroyJoint","startingPoint","patternsPoints","getShape","m_vertices","patternVertex","getWorldPoint","every","pieceVertex","j","intersect","piecePoint","patternPoints","lastPatternPoint","currentPatternPoint","intersects","alert","check","mmEvent","physicsPoint","point","setTarget","mouseJointDef","bodyA","bodyB","target","collideConnected","maxForce","getMass","dampingRatio","createJoint","MouseJoint","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","det","lambda","gamma","createWall","wallBodyDef","wallBody","wallFixtureDef","tick","update","step","clearForces","parentRect","parentElement","getBoundingClientRect","setup","autoUpdate","canvasRect","gravity","World","setupPhysics","mediumBase","sqrt","pow","largeBase","setupPieces","init","display","flex","as","ref","left","bottom","right","minX","minY","maxX","maxY","aabb","getAABB","undefined","lowerBound","upperBound","pix","data","n","downloadCanvas","ctx","putImageData","toDataURL","replace","getCroppedImageDataUrl","App","setGalery","selectedImageDataUrl","setSelectedImageDataUrl","theme","flexDirection","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4a387756.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport {\n  background,\n  border,\n  color,\n  flexbox,\n  layout,\n  position,\n  space,\n  typography\n} from \"styled-system\";\n\nexport const View = styled.div`\n  ${space}\n  ${layout}\n  ${typography}\n  ${color}\n  ${flexbox}\n  ${background}\n  ${border}\n  ${position}\n`;\n","import React, { useState } from \"react\";\nimport \"./Galery.scss\";\n\nexport const Galery = ({ galery, onSelect }) => {\n  const [opened, setOpened] = useState(false);\n  return (\n    <div className=\"drawer\" style={{ top: opened ? 0 : -180 }}>\n      <div className=\"galery\">\n        {galery.map((imageDataUrl, index) => (\n          <div\n            key={imageDataUrl}\n            className=\"card\"\n            onClick={() => onSelect(imageDataUrl)}\n          >\n            <span>Square</span>\n            <div\n              className=\"image\"\n              style={{ backgroundImage: `url(${imageDataUrl})` }}\n            ></div>\n            <span>By myagoo</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"handle\" onClick={() => setOpened(!opened)}>\n        Toggle gallery\n      </div>\n    </div>\n  );\n};\n","import ImageTracer from \"imagetracerjs\";\nimport paper from \"paper/dist/paper-core\";\nimport { MouseJoint, Polygon, Vec2, World } from \"planck-js\";\nimport React, { useEffect, useLayoutEffect, useRef } from \"react\";\nimport { View } from \"./components/view\";\n\nconst SCALE = 30;\nconst WALL_WIDTH = 10;\nconst FPS = 60;\n\nconst STROKE_WIDTH = 2;\nfunction createTrianglePoints(size) {\n  return [\n    { x: 0, y: 0 },\n    { x: size * 2, y: 0 },\n    { x: size, y: size }\n  ];\n}\n\nfunction createSquarePoints(size) {\n  return [\n    { x: 0, y: 0 },\n    { x: size, y: 0 },\n    { x: size, y: size },\n    { x: 0, y: size }\n  ];\n}\n\nfunction createInvertedRhombusPoints(size) {\n  return [\n    { x: size, y: 0 },\n    { x: size * 3, y: 0 },\n    { x: size * 2, y: size },\n    { x: 0, y: size }\n  ];\n}\n\nfunction createRhombusPoints(size) {\n  return [\n    { x: 0, y: 0 },\n    { x: size * 2, y: 0 },\n    { x: size * 3, y: size },\n    { x: size, y: size }\n  ];\n}\n\nexport const Tangram = ({ onSave, patternImageDataUrl }) => {\n  const canvasRef = useRef();\n\n  const piecesRef = useRef();\n  const worldRef = useRef();\n  const patternsRef = useRef();\n\n  useEffect(() => {\n    if (patternImageDataUrl) {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = canvasRef.current.width;\n      canvas.height = canvasRef.current.height;\n\n      const context = canvas.getContext(\"2d\");\n      const image = new Image();\n\n      image.onload = function() {\n        context.drawImage(image, 0, 0); // Or at whatever offset you like\n      };\n\n      image.src = patternImageDataUrl;\n\n      const options = {\n        numberofcolors: 2,\n        qtres: 0,\n        ltres: 1,\n        rightangleenhance: true,\n        pathomit: 8\n      };\n\n      setTimeout(() => {\n        const imageData = context.getImageData(\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n\n        var traceData = ImageTracer.imagedataToTracedata(imageData, options);\n\n        patternsRef.current = traceData.layers[0].map(({ segments }) => {\n          const path = new paper.Path(segments.map(({ x1, y1 }) => [x1, y1]));\n          path.closed = true;\n          path.strokeWidth = 1;\n          path.strokeColor = \"green\";\n          path.position = { x: 200, y: 200 };\n\n          const bodyDef = {\n            type: \"static\",\n            position: {\n              x: 200 / SCALE,\n              y: 200 / SCALE\n            }\n          };\n\n          const body = worldRef.current.createBody(bodyDef);\n\n          const vertices = [];\n\n          for (let i = 0; i < segments.length; i++) {\n            vertices[i] = new Vec2(\n              segments[i].x1 / SCALE,\n              segments[i].y1 / SCALE\n            );\n          }\n\n          const fixtureDef = {\n            filterCategoryBits: 0x0002,\n            filterMaskBits: 0x0002,\n            shape: new Polygon(vertices)\n          };\n\n          body.createFixture(fixtureDef);\n\n          return { body, path };\n        });\n      }, 0);\n\n      return () => {\n        patternsRef.current.forEach(({ body, path }) => {\n          worldRef.current.destroyBody(body);\n          path.remove();\n        });\n      };\n    }\n  }, [patternImageDataUrl]);\n\n  function getCroppedImageDataUrl() {\n    let minX, minY, maxX, maxY, aabb;\n\n    for (let i = 0; i < piecesRef.current.length; i++) {\n      aabb = piecesRef.current[i].body.getFixtureList().getAABB(0);\n\n      if (minX === undefined || aabb.lowerBound.x < minX) {\n        minX = aabb.lowerBound.x;\n      }\n      if (minY === undefined || aabb.lowerBound.y < minY) {\n        minY = aabb.lowerBound.y;\n      }\n      if (maxX === undefined || aabb.upperBound.x > maxX) {\n        maxX = aabb.upperBound.x;\n      }\n      if (maxY === undefined || aabb.upperBound.y > maxY) {\n        maxY = aabb.upperBound.y;\n      }\n    }\n\n    const context = canvasRef.current.getContext(\"2d\");\n\n    const imageData = context.getImageData(\n      minX * SCALE,\n      minY * SCALE,\n      maxX * SCALE - minX * SCALE,\n      maxY * SCALE - minY * SCALE\n    );\n\n    const pix = imageData.data;\n\n    for (let i = 0, n = pix.length; i < n; i += 4) {\n      if (pix[i + 3]) {\n        pix[i] = 0; // red\n        pix[i + 1] = 0; // green\n        pix[i + 2] = 0; // blue\n      }\n    }\n\n    const downloadCanvas = document.createElement(\"canvas\");\n    const ctx = downloadCanvas.getContext(\"2d\");\n    downloadCanvas.width = imageData.width;\n    downloadCanvas.height = imageData.height;\n    ctx.putImageData(imageData, 0, 0);\n\n    return downloadCanvas\n      .toDataURL(\"image/png\")\n      .replace(\"image/png\", \"image/octet-stream\");\n  }\n\n  useLayoutEffect(() => {\n    let ground;\n\n    function init() {\n      const parentRect = canvasRef.current.parentElement.getBoundingClientRect();\n      canvasRef.current.width = parentRect.width;\n      canvasRef.current.height = parentRect.height;\n\n      // Create an empty project and a view for the canvas:\n      paper.setup(canvasRef.current);\n      paper.view.autoUpdate = false;\n      setupPhysics();\n      setupPieces();\n      paper.view.on(\"frame\", tick);\n    }\n\n    function createPiece(points, invertedPoints) {\n      var path = new paper.Path(points);\n      path.strokeColor = \"black\";\n      path.strokeWidth = STROKE_WIDTH;\n      path.fillColor = paper.Color.random();\n      path.closed = true;\n      path.applyMatrix = false;\n      path.pivot = new paper.Point(0, 0);\n\n      const vertices = [];\n      for (let i = 0; i < points.length; i++) {\n        vertices[i] = new Vec2(points[i].x / SCALE, points[i].y / SCALE);\n      }\n\n      const fixtureDef = {\n        density: 1000,\n        friction: 0,\n        restitution: 0,\n        shape: new Polygon(vertices)\n      };\n\n      const bodyDef = {\n        type: \"dynamic\",\n        position: {\n          x: 200 / SCALE,\n          y: 200 / SCALE\n        },\n\n        linearDamping: 100.0,\n        angularDamping: 100.0\n      };\n\n      const body = worldRef.current.createBody(bodyDef);\n      body.createFixture(fixtureDef);\n\n      paper.view.on(\"frame\", function() {\n        const position = body.getPosition();\n        path.position = new paper.Point(position.x * SCALE, position.y * SCALE);\n        path.rotation = body.getAngle() * (180 / Math.PI);\n      });\n\n      path.on(\"click\", () => {\n        if (window.event.ctrlKey) {\n          if (body.getType() === \"dynamic\") {\n            body.setType(\"static\");\n            body.setAwake(false);\n          } else {\n            body.setType(\"dynamic\");\n            body.setAwake(true);\n          }\n        }\n      });\n\n      if (invertedPoints) {\n        let inverted = false;\n\n        const invertedVertices = [];\n\n        for (let i = 0; i < invertedPoints.length; i++) {\n          invertedVertices[i] = new Vec2(\n            invertedPoints[i].x / SCALE,\n            invertedPoints[i].y / SCALE\n          );\n        }\n\n        const invertedFixtureDef = {\n          density: 1000,\n          friction: 0,\n          restitution: 0,\n          shape: new Polygon(invertedVertices)\n        };\n\n        path.on(\"doubleclick\", () => {\n          body.destroyFixture(body.getFixtureList());\n          body.createFixture(inverted ? fixtureDef : invertedFixtureDef);\n          path.segments = inverted ? points : invertedPoints;\n          inverted = !inverted;\n        });\n      }\n\n      path.on(\"mousedown\", function(mdEvent) {\n        if (window.event.ctrlKey) {\n          return;\n        }\n        var physicsMoveJoint;\n\n        body.getFixtureList().setDensity(1);\n        body.resetMassData();\n        body.setBullet(true);\n\n        function handleMouseMove(mmEvent) {\n          const physicsPoint = new Vec2(\n            mmEvent.point.x / SCALE,\n            mmEvent.point.y / SCALE\n          );\n          if (!physicsMoveJoint) {\n            const mouseJointDef = {\n              bodyA: ground,\n              bodyB: body,\n              target: physicsPoint,\n              collideConnected: true,\n              maxForce: 2000 * body.getMass(),\n              dampingRatio: 0\n            };\n            physicsMoveJoint = worldRef.current.createJoint(\n              MouseJoint(mouseJointDef)\n            );\n          } else {\n            physicsMoveJoint.setTarget(physicsPoint);\n          }\n        }\n\n        function handleMouseUp() {\n          paper.view.off(\"mousemove\", handleMouseMove);\n          paper.view.off(\"mouseup\", handleMouseUp);\n          if (physicsMoveJoint) {\n            worldRef.current.destroyJoint(physicsMoveJoint);\n          }\n          body.setBullet(false);\n          body.getFixtureList().setDensity(1000);\n          body.resetMassData();\n\n          patternsRef.current && check();\n        }\n\n        paper.view.on(\"mousemove\", handleMouseMove);\n        paper.view.on(\"mouseup\", handleMouseUp);\n      });\n\n      return { body, path, points, invertedPoints };\n    }\n\n    function intersects(ax1, ay1, ax2, ay2, bx1, by1, bx2, by2) {\n      const det = (ax2 - ax1) * (by2 - by1) - (bx2 - bx1) * (ay2 - ay1);\n      if (det === 0) {\n        return false;\n      } else {\n        const lambda =\n          ((by2 - by1) * (bx2 - ax1) + (bx1 - bx2) * (by2 - ay1)) / det;\n        const gamma =\n          ((ay1 - ay2) * (bx2 - ax1) + (ax2 - ax1) * (by2 - ay1)) / det;\n        return 0 < lambda && lambda < 1 && 0 < gamma && gamma < 1;\n      }\n    }\n\n    function check() {\n      // on verifie que points des pieces est à l'intereieuse de chaque polygon\n      // on verifie que chq rayon allant vers un pt des pieces intersecte\n      const startingPoint = new Vec2(0, 0);\n\n      const patternsPoints = patternsRef.current.map(({ body }) =>\n        body\n          .getFixtureList()\n          .getShape()\n          .m_vertices.map(patternVertex => body.getWorldPoint(patternVertex))\n      );\n\n      const everyPiecePointIsWithingPattern = piecesRef.current.every(\n        ({ body }) => {\n          const pieceVertices = body.getFixtureList().getShape().m_vertices;\n          return pieceVertices.every((pieceVertex, j) => {\n            let intersect = 0;\n            const piecePoint = body.getWorldPoint(pieceVertex);\n\n            for (let i = 0; i < patternsPoints.length; i++) {\n              const patternPoints = patternsPoints[i];\n              let lastPatternPoint = patternPoints[patternPoints.length - 1];\n              for (let j = 0; j < patternPoints.length; j++) {\n                const currentPatternPoint = patternPoints[j];\n                if (\n                  intersects(\n                    startingPoint.x,\n                    startingPoint.y,\n                    piecePoint.x,\n                    piecePoint.y,\n                    lastPatternPoint.x,\n                    lastPatternPoint.y,\n                    currentPatternPoint.x,\n                    currentPatternPoint.y\n                  )\n                ) {\n                  intersect++;\n                }\n                lastPatternPoint = currentPatternPoint;\n              }\n            }\n\n            const isOdd = intersect % 2;\n\n            return isOdd;\n          });\n        }\n      );\n      if (everyPiecePointIsWithingPattern) {\n        alert(\"YOU WIN MOTHERFUCKER\");\n      }\n    }\n\n    function setupPieces() {\n      const smallBase = 40;\n      const mediumBase = Math.sqrt(Math.pow(smallBase, 2) * 2);\n      const largeBase = Math.sqrt(Math.pow(mediumBase, 2) * 2);\n      piecesRef.current = [\n        createPiece(createTrianglePoints(smallBase)),\n        createPiece(createTrianglePoints(smallBase)),\n        createPiece(createTrianglePoints(mediumBase)),\n        createPiece(createTrianglePoints(largeBase)),\n        createPiece(createTrianglePoints(largeBase)),\n        createPiece(createSquarePoints(mediumBase)),\n        createPiece(\n          createRhombusPoints(smallBase),\n          createInvertedRhombusPoints(smallBase)\n        )\n      ];\n    }\n\n    function createWall(width, height, position) {\n      const wallBodyDef = {\n        type: \"static\",\n        position: {\n          x: position.x / SCALE,\n          y: position.y / SCALE\n        }\n      };\n\n      const wallBody = worldRef.current.createBody(wallBodyDef);\n\n      const wallFixtureDef = {\n        shape: new Polygon([\n          new Vec2(0 / SCALE, 0 / SCALE),\n          new Vec2(width / SCALE, 0 / SCALE),\n          new Vec2(width / SCALE, height / SCALE),\n          new Vec2(0 / SCALE, height / SCALE)\n        ])\n      };\n\n      wallBody.createFixture(wallFixtureDef);\n\n      return wallBody;\n    }\n\n    function setupPhysics() {\n      const canvasRect = canvasRef.current.getBoundingClientRect();\n      const gravity = new Vec2(0, 0);\n      worldRef.current = new World(gravity, true);\n\n      ground = createWall(canvasRect.width, WALL_WIDTH, { x: 0, y: 0 });\n      createWall(canvasRect.width, WALL_WIDTH, {\n        x: 0,\n        y: canvasRect.height - WALL_WIDTH\n      });\n      createWall(WALL_WIDTH, canvasRect.height, { x: 0, y: 0 });\n      createWall(WALL_WIDTH, canvasRect.height, {\n        x: canvasRect.width - WALL_WIDTH,\n        y: 0\n      });\n    }\n\n    function tick() {\n      paper.view.update();\n      worldRef.current.step(1 / FPS, 10, 10);\n      worldRef.current.clearForces();\n    }\n\n    init();\n  }, []);\n\n  return (\n    <View display=\"flex\" flex=\"1\" position=\"relative\">\n      <View as=\"canvas\" ref={canvasRef} position=\"absolute\" top={0} left={0} />\n      <View\n        as=\"button\"\n        position=\"absolute\"\n        bottom={0}\n        right={0}\n        onClick={() => onSave(getCroppedImageDataUrl())}\n      >\n        Save\n      </View>\n    </View>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { View } from \"./components/view\";\nimport { Galery } from \"./Galery\";\nimport { Tangram } from \"./Tangram\";\n\nfunction App() {\n  const [galery, setGalery] = useState([]);\n  const [selectedImageDataUrl, setSelectedImageDataUrl] = useState();\n\n  const handleSave = imageDataUrl => {\n    setGalery([...galery, imageDataUrl]);\n  };\n  const handleSelect = imageDataUrl => {\n    setSelectedImageDataUrl(imageDataUrl);\n  };\n  return (\n    <ThemeProvider theme={{}}>\n      <View display=\"flex\" flexDirection=\"column\" height=\"100vh\" width=\"100vw\">\n        <Tangram\n          onSave={handleSave}\n          patternImageDataUrl={selectedImageDataUrl}\n        ></Tangram>\n        <Galery galery={galery} onSelect={handleSelect}></Galery>\n      </View>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}